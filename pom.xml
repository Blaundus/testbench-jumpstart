<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright [2014] [www.rapidpm.org / Sven Ruppert (sven.ruppert@rapidpm.org)]
  ~
  ~    Licensed under the Apache License, Version 2.0 (the "License");
  ~    you may not use this file except in compliance with the License.
  ~    You may obtain a copy of the License at
  ~
  ~        http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~    Unless required by applicable law or agreed to in writing, software
  ~    distributed under the License is distributed on an "AS IS" BASIS,
  ~    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~    See the License for the specific language governing permissions and
  ~    limitations under the License.
  -->

<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.rapidpm</groupId>
    <artifactId>rapidpm-dependencies</artifactId>
    <version>3.5.5</version>
  </parent>

  <groupId>org.rapidpm.vaadin</groupId>
  <artifactId>testbench-jumpstart</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <name>Vaadin Testbench Jumpstart</name>

  <modules>
    <module>modules</module>
  </modules>

  <packaging>pom</packaging>

  <inceptionYear>2017</inceptionYear>
  <organization>
    <name>Vaadin</name>
    <url>http://www.vaadin.com</url>
  </organization>
  <url>https://github.com/vaadin-developer/testbench-jumpstart</url>
  <description>An industrial style Jumpstart
    to show how you could do TDD with a Vaadin Project
  </description>

  <scm>
    <url>https://github.com/vaadin-developer/testbench-jumpstart</url>
    <connection>
      scm:git:https://github.com/vaadin-developer/testbench-jumpstart.git
    </connection>
    <developerConnection>
      scm:git:https://github.com/vaadin-developer/testbench-jumpstart.git
    </developerConnection>
    <tag>HEAD</tag>
  </scm>
  <developers>
    <developer>
      <name>Sven Ruppert</name>
      <email>sven.ruppert@gmail.com</email>
      <roles>
        <role>Developer</role>
      </roles>
      <timezone>+1</timezone>
    </developer>
  </developers>
  <issueManagement>
    <system>Github</system>
    <url>
      https://github.com/vaadin-developer/testbench-jumpstart/issues
    </url>
  </issueManagement>
  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
      <comments>A business-friendly OSS license</comments>
    </license>
  </licenses>

  <properties>
    <!--technical-->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>

    <!--Vaadin-->
    <vaadin.version>8.2.0</vaadin.version>
    <vaadin-testbench-api.version>5.1.1</vaadin-testbench-api.version>
    <vaadin.widgetset.mode>local</vaadin.widgetset.mode>

    <!--TDD-->
    <jacoco.version>0.7.9</jacoco.version>
    <pitest-prod-classes>org.rapidpm.vaadin*</pitest-prod-classes>
    <pitest-test-classes>junit.org.rapidpm*</pitest-test-classes>

    <!--logging-->
    <slf4j.version>1.7.25</slf4j.version>
    <log4j-api.version>2.8.1</log4j-api.version>

    <!--RapidPM bundles-->
    <rapidpm-microservice.version>1.0.1</rapidpm-microservice.version>
    <rapidpm-ddi.version>1.0.1</rapidpm-ddi.version>
    <rapidpm-vaadin-addons.version>0.1.1-SNAPSHOT</rapidpm-vaadin-addons.version>
    <pitest.version>1.2.5</pitest.version>
  </properties>


  <dependencyManagement>
    <dependencies>

      <!--Vaadin -->
      <dependency>
        <groupId>com.vaadin</groupId>
        <artifactId>vaadin-bom</artifactId>
        <version>${vaadin.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>com.vaadin</groupId>
        <artifactId>vaadin-testbench</artifactId>
        <version>${vaadin-testbench-api.version}</version>
        <scope>test</scope>
      </dependency>

      <!--Project Stuff-->

      <!--Demo 01-->
      <dependency>
        <groupId>org.rapidpm.vaadin</groupId>
        <artifactId>tb-jumpstart-m-demos-demo01</artifactId>
        <version>${project.version}</version>
      </dependency>

      <!--Demo02-->
      <dependency>
        <groupId>org.rapidpm.vaadin</groupId>
        <artifactId>tb-jumpstart-m-demos-demo02-shared</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.rapidpm.vaadin</groupId>
        <artifactId>tb-jumpstart-m-demos-demo02-srv</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>org.rapidpm.vaadin</groupId>
        <artifactId>tb-jumpstart-m-demos-demo02-ui</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>org.rapidpm.vaadin</groupId>
        <artifactId>tb-jumpstart-m-demos-demo02-ui-components</artifactId>
        <version>${project.version}</version>
      </dependency>

      <!--Demo03-->
      <dependency>
        <groupId>org.rapidpm.vaadin</groupId>
        <artifactId>tb-jumpstart-m-demos-demo03-shared</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>org.rapidpm.vaadin</groupId>
        <artifactId>tb-jumpstart-m-demos-demo03-srv</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>org.rapidpm.vaadin</groupId>
        <artifactId>tb-jumpstart-m-demos-demo03-ui</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.rapidpm.vaadin</groupId>
        <artifactId>tb-jumpstart-m-demos-demo03-ui-components</artifactId>
        <version>${project.version}</version>
      </dependency>

      <!--RapidPM stuff  -->
      <dependency>
        <groupId>org.rapidpm.microservice</groupId>
        <artifactId>rapidpm-microservice-bom</artifactId>
        <version>${rapidpm-microservice.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>org.rapidpm.dynamic-cdi</groupId>
        <artifactId>rapidpm-dynamic-cdi-modules-core</artifactId>
        <version>${rapidpm-ddi.version}</version>
      </dependency>


      <dependency>
        <groupId>org.rapidpm</groupId>
        <artifactId>rapidpm-vaadin-addons-modules-junit5</artifactId>
        <version>${rapidpm-vaadin-addons.version}</version>
      </dependency>
      <dependency>
        <groupId>org.rapidpm</groupId>
        <artifactId>rapidpm-vaadin-addons-modules-framework</artifactId>
        <version>${rapidpm-vaadin-addons.version}</version>
      </dependency>
      <dependency>
        <groupId>org.rapidpm</groupId>
        <artifactId>rapidpm-vaadin-addons-modules-testbench</artifactId>
        <version>${rapidpm-vaadin-addons.version}</version>
      </dependency>


      <!--TDD tooling-->
      <dependency>
        <groupId>com.automation-remarks</groupId>
        <artifactId>video-recorder-junit</artifactId>
        <version>1.7</version>
        <!--<scope>test</scope>-->
      </dependency>
      <dependency>
        <groupId>org.seleniumhq.selenium</groupId>
        <artifactId>selenium-java</artifactId>
        <version>3.8.1</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>


  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>io.fabric8</groupId>
          <artifactId>docker-maven-plugin</artifactId>
          <version>0.23.0</version>
        </plugin>

        <plugin>
          <groupId>com.github.webdriverextensions</groupId>
          <artifactId>webdriverextensions-maven-plugin</artifactId>
          <version>3.1.3</version>
        </plugin>
        <plugin>
          <groupId>com.vaadin</groupId>
          <artifactId>vaadin-maven-plugin</artifactId>
          <version>${vaadin.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <!--<plugin>-->
      <!--<artifactId>maven-failsafe-plugin</artifactId>-->
      <!--<executions>-->
      <!--<execution>-->
      <!--<goals>-->
      <!--<goal>integration-test</goal>-->
      <!--<goal>verify</goal>-->
      <!--</goals>-->
      <!--</execution>-->
      <!--</executions>-->
      <!--<configuration>-->
      <!--<includes>-->
      <!--<include>**/org/rapidpm/**/</include>-->
      <!--</includes>-->
      <!--&lt;!&ndash; So that the browser correctly gains focus on Mac-->
      <!--OS X &ndash;&gt;-->
      <!--<systemProperties>-->
      <!--<property>-->
      <!--<name>java.awt.headless</name>-->
      <!--<value>true</value>-->
      <!--</property>-->
      <!--</systemProperties>-->
      <!--</configuration>-->
      <!--</plugin>-->
    </plugins>
  </build>


  <profiles>
    <profile>
      <id>qm-qs-pitest</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <!--Enable mutation testing-->
          <plugin>
            <groupId>org.pitest</groupId>
            <artifactId>pitest-maven</artifactId>
            <version>${pitest.version}</version>
            <configuration>
              <threads>2</threads>
              <outputFormats>
                <outputFormat>XML</outputFormat>
                <outputFormat>HTML</outputFormat>
              </outputFormats>
              <targetClasses>
                <param>${pitest-prod-classes}</param>
              </targetClasses>
              <targetTests>
                <param>${pitest-test-classes}</param>
              </targetTests>
              <useSlf4j>false</useSlf4j>
              <excludedMethods>
                <excludedMethod>setSizeUndefined</excludedMethod>
              </excludedMethods>
              <withHistory>true</withHistory>
              <historyInputFile>target/pit-history.txt</historyInputFile>
              <historyOutputFile>target/pit-history.txt</historyOutputFile>
            </configuration>
          </plugin>
          <!--<plugin>-->
            <!--<groupId>fr.inria.stamp.plugins</groupId>-->
            <!--<artifactId>pitmp-maven-plugin</artifactId>-->
            <!--<version>1.0.1</version>-->
            <!--&lt;!&ndash; list all the packages of the project that contain classes you want to mutate-->
            <!--&ndash;&gt;-->
            <!--<configuration>-->
              <!--<targetClasses>-->
                <!--<param>org.rapidpm.vaadin.*</param>-->
                <!--&lt;!&ndash;<param>another.package.of.classes.to.mutate*</param>&ndash;&gt;-->
              <!--</targetClasses>-->
              <!--<useSlf4j>false</useSlf4j>-->
              <!--<outputFormats>-->
                <!--<format>html</format>-->
              <!--</outputFormats>-->
            <!--</configuration>-->
            <!--<dependencies>-->
              <!--<dependency>-->
                <!--<groupId>org.pitest</groupId>-->
                <!--<artifactId>pitest-maven</artifactId>-->
                <!--<version>1.2.0</version>-->
                <!--&lt;!&ndash;<version>1.2.5</version>&ndash;&gt;-->
              <!--</dependency>-->
            <!--</dependencies>-->
          <!--</plugin>-->
        </plugins>
      </build>
      <reporting>
        <plugins>
          <plugin>
            <groupId>org.pitest</groupId>
            <artifactId>pitest-maven</artifactId>
            <version>${pitest.version}</version>
            <reportSets>
              <reportSet>
                <reports>
                  <report>report</report>
                </reports>
              </reportSet>
            </reportSets>
          </plugin>
        </plugins>
      </reporting>
    </profile>

    <profile>
      <id>docker-selenium-hub</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <configuration>
              <autoPull>on</autoPull>
              <startParallel>false</startParallel>
              <!--<dockerHost>192.168.0.100</dockerHost>-->
              <images>
                <image>
                  <name>selenium/hub</name>
                  <alias>selenium-hub</alias>
                  <run>
                    <ports>
                      <port>4444:4444</port>
                    </ports>
                  </run>
                </image>
                <image>
                  <name>selenium/node-chrome</name>
                  <alias>selenium-node-chrome</alias>
                  <run>
                    <links>
                      <link>selenium-hub:hub</link>
                    </links>
                    <dependsOn>
                      <container>selenium-hub</container>
                    </dependsOn>
                  </run>
                </image>
                <!--<image>-->
                <!--<name>selenium/node-phantomjs</name>-->
                <!--<alias>selenium-node-phantomjs</alias>-->
                <!--<run>-->
                <!--<links>-->
                <!--<link>selenium-hub:hub</link>-->
                <!--</links>-->
                <!--<dependsOn>-->
                <!--<container>selenium-hub</container>-->
                <!--</dependsOn>-->
                <!--</run>-->
                <!--</image>-->
                <!--<image>-->
                <!--<name>selenium/node-firefox</name>-->
                <!--<alias>selenium-node-firefox</alias>-->
                <!--<run>-->
                <!--<links>-->
                <!--<link>selenium-hub:hub</link>-->
                <!--</links>-->
                <!--<dependsOn>-->
                <!--<container>selenium-hub</container>-->
                <!--</dependsOn>-->
                <!--</run>-->
                <!--</image>-->
              </images>
            </configuration>
            <!--<executions>-->
            <!--<execution>-->
            <!--<id>docker:build</id>-->
            <!--<goals>-->
            <!--<goal>build</goal>-->
            <!--</goals>-->
            <!--</execution>-->
            <!--<execution>-->
            <!--<id>docker:start</id>-->
            <!--<phase>compile</phase>-->
            <!--<goals>-->
            <!--<goal>start</goal>-->
            <!--</goals>-->
            <!--</execution>-->
            <!--<execution>-->
            <!--<id>docker:stop</id>-->
            <!--<phase>post-integration-test</phase>-->
            <!--<goals>-->
            <!--<goal>stop</goal>-->
            <!--</goals>-->
            <!--</execution>-->
            <!--</executions>-->
          </plugin>
        </plugins>
      </build>
    </profile>

  </profiles>
</project>
